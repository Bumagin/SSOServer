name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Build Docker image
      run: |
        docker build -t myapp:latest .

    - name: Save Docker image to file
      run: |
        docker save myapp:latest -o myapp.tar

    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: myapp.tar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download Docker image artifact
      uses: actions/download-artifact@v3
      with:
        name: docker-image

    - name: Copy Docker image to server
      run: |
        scp -o StrictHostKeyChecking=no myapp.tar ${{ secrets.HOST_USER }}@${{ secrets.HOST }}:/tmp/myapp.tar
      env:
        HOST_USER: ${{ secrets.HOST_USER }}
        HOST: ${{ secrets.HOST }}
        HOST_PASSWORD: ${{ secrets.HOST_PASSWORD }}

    - name: SSH into server and load Docker image
      uses: appleboy/ssh-action@v0.1.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.HOST_USER }}
        password: ${{ secrets.HOST_PASSWORD }}
        script: |
          docker load -i /tmp/myapp.tar
          docker stop myapp || true
          docker rm myapp || true
          docker run -d --name myapp -p 80:80 myapp:latest
